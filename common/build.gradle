plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'com.vladte.devhack'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation project(":domain")
    implementation project(':infra')

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
    implementation 'org.webjars:bootstrap:5.3.2'
    implementation 'org.webjars:jquery:3.7.1'
    implementation 'org.webjars:popper.js:2.11.7'
    implementation 'org.webjars:select2:4.0.13'
    implementation 'org.projectlombok:lombok'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'io.minio:minio:8.5.12'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.4'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.4'

    // JSON Schema validation & Mustache templating for prompt rendering
    implementation 'com.networknt:json-schema-validator:1.0.86'
    implementation 'com.samskivert:jmustache:1.15'


    // OpenAPI/Swagger documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'


    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testng:testng:7.9.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Allure reporting
    testImplementation 'io.qameta.allure:allure-junit5:2.24.0'
    testImplementation 'io.qameta.allure:allure-java-commons:2.24.0'

    // AspectJ
    implementation 'org.aspectj:aspectjweaver:1.9.20'
    testImplementation 'org.aspectj:aspectjrt:1.9.20'
}

tasks.named('test') {
    useJUnitPlatform()

    // Enable Allure reporting
    systemProperty 'allure.results.directory', "${layout.buildDirectory.get().asFile}/allure-results"
}

allure {
    version = '2.24.0'
    useJUnit5 {
        version = '2.24.0'
    }
}
