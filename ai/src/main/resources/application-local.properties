spring.application.name=ai
server.port=8083
# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.vladte.devhack.infra.model
spring.kafka.consumer.group-id=devhack-group-2
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.properties.client.telemetry.enable=false
# OpenAI Configuration
openai.api.key=${OPENAI_CHAT_API_KEY:}
openai.model=o4-mini-2025-04-16
openai.max-tokens=350
# GPT-J Configuration via LocalAI
gptj.api.key={your-key}
gptj.model=gemma-3-4b-it-qat
gptj.max-tokens=500
gptj.api.url=http://localhost:8086/v1/completions
# AI Service Provider Configuration (options: openai, gptj)
ai.service.provider=gptj
# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
logging.level.root=debug
logging.level.org.apache.kafka=info
logging.level.javax.management.remote.rmi=info
logging.level.sun.rmi=info
logging.level.org.springframework.kafka=info
